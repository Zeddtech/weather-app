import{countries}from"./vendor/countries.js";import{key}from"./config.js";const currentLocation=document.querySelector(".header"),parameters=document.querySelector(".parameters"),sun=document.querySelector(".sun-box"),daily=document.querySelector(".days"),hourly=document.querySelector(".hours"),input=document.querySelector(".input-search"),slider=document.querySelectorAll(".slider"),weatherApp=document.querySelector(".weather-app"),video=document.querySelector("video");function f(int){return Math.round(int)}function getLocation(){if(navigator.geolocation){var options={timeout:1e4,enableHighAccuracy:!0,maximumAge:2e3};navigator.geolocation.getCurrentPosition(successHandler,errorHandler,options)}else alert(" unable to get your geolocation information, your browser does not support geolocation! to get your current position weather information click on the search icon then search for your city name "),getCityInfo(6.605874,3.349149)}function successHandler(location){let{latitude:latitude,longitude:longitude}=location.coords;getCityInfo(latitude,longitude)}function errorHandler(err){1==err.code?alert("Error: Unable to get your geolocation information  because the page didn't have the permission to do it. please turn on your device  location and grant acess to location to get your weather information or You can  search city names to get it's current weather information"):2==err.code?alert("Error: your geolocation lnformation is  unavailable!"):3==err.code&&alert("Error Timeout: Failed to get  geolocation lnformation !"),getCityInfo(6.605874,3.349149)}async function getCityInfo(lat,long){weatherApp.style.opacity=0;try{let res=await fetch(`https://api.openweathermap.org/geo/1.0/reverse?lat=${lat}&lon=${long}&limit=1&appid=${key}`);if(res=await res.json(),res.message)throw new Error(` Bad Request, ${res.message}`);if(res.length<1)throw new Error(" Sorry Could Not Get Your City Info ");fetchWeather(res[0])}catch(error){weatherApp.style.opacity=1,alert(error)}}function fetchWeather(coords){let{name:name,lat:lat,lon:lon,state:state,country:country}=coords;fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&units=metric&exclude=alerts,minutely&appid=${key}`).then(data=>data.json()).then(data=>{if(data.message)throw new Error(data.message);render(name,state,country,data)}).catch(err=>{weatherApp.style.opacity=1,alert("Bad Request, "+err)})}getLocation(),document.querySelector(".form").addEventListener("submit",e=>{e.preventDefault();let city=input.value.trim();""!==city&&(getcitycords(city),input.value="")});const cities=document.querySelectorAll(".city-el");function getcitycords(city){weatherApp.style.opacity=0,input.blur(),fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${key}`).then(data=>data.json()).then(res=>{if(200!=res.cod)throw new Error(res.message);getCityInfo(res.coord.lat,res.coord.lon)}).catch(err=>{weatherApp.style.opacity=1,alert(err)})}function render(cityname,state,country,weatherInfo){let date=moment.unix(weatherInfo.current.dt).format(" dddd MMMM Do, h:mm A"),hour="",day="",weather=weatherInfo.current.weather[0].main;switch(currentLocation.innerHTML=` <div class="city">${cityname} , ${state?state+",":""} ${country?countries[country]:""}</div>\n  <div class="weather">\n  <h1 class="current-temp" title="Temperature">${f(weatherInfo.current.temp)}&deg;</h1>\n  <div class="weather-condition">\n  <img src="https://openweathermap.org/img/wn/${weatherInfo.current.weather[0].icon}@2x.png" alt="${weatherInfo.current.weather[0].description}" title="${weatherInfo.current.weather[0].description}">\n  <p >${weather}</p>\n  </div>\n  </div>\n  <p class="date">\n\n  ${date}\n\n  </p>`,parameters.innerHTML=`\n  \x3c!-- humidity --\x3e\n  <div class="humidity param-box">\n  <i class="bx bx-droplet"></i>\n  <div class="param-body">\n  <p class="param-name">humidity</p>\n  <p class="param-value">${f(weatherInfo.current.humidity)}<small>%</small></p>\n  </div>\n  </div>\n  \x3c!-- pressure --\x3e\n  <div class="pressure param-box">\n  <i class="bx bx-tachometer"></i>\n  <div class="param-body">\n  <p class="param-name">pressure</p>\n  <p class="param-value">${f(.1*weatherInfo.current.pressure)}<small>kPa</small></p>\n  </div>\n  </div>\n  \x3c!-- wind speed --\x3e\n  <div class="wind param-box">\n  <i class="bx bx-wind"></i>\n  <div class="param-body">\n  <p class="param-name">wind speed</p>\n  <p class="param-value">${f(weatherInfo.current.wind_speed)}<small>m/s</small></p>\n  </div>\n  </div>\n  `,sun.innerHTML=`<div class="sun-rise-con">\n  <div class="sun-rise" title="Sun-rise"></div>\n  <p class="sun-rise">${moment.unix(weatherInfo.current.sunrise).format("h:mm A")}</p>\n  </div>\n  <div class="sun-set-con">\n  <div class="sun-set" title="sun-set"></div>\n  <p class="sun-set">${moment.unix(weatherInfo.current.sunset).format("h:mm A")}</p>\n  </div>`,weatherInfo.hourly.forEach((el,indx)=>{0!=indx&&(hour+=`<div class="hourly">\n      <p class="time">${moment.unix(el.dt).format("h:mm A")}</p>\n      <img src="https://openweathermap.org/img/wn/${el.weather[0].icon}@2x.png" alt="${el.weather[0].description}" title="${el.weather[0].description}" />\n      <p class="temp" title="Temperature">${f(el.temp)}&deg;</p>\n      </div>`)}),hourly.innerHTML=hour,weatherInfo.daily.forEach((el,indx)=>{0!=indx&&(day+=`\n      <div class="daily">\n      <p class="day">${moment.unix(el.dt).format("ddd")}</p>\n      <img src="https://openweathermap.org/img/wn/${el.weather[0].icon}@2x.png" alt="${el.weather[0].description}" title="${el.weather[0].description}"/>\n      <p class="temp" title='temperature'>${f(el.temp.day)}&deg;</p>\n      <p class="temp" title='humidity'>${f(el.humidity)}<small>%</small></p>\n      <p class="temp" title='wind speed'>${f(el.wind_speed)}<small>m/s</small></p>\n      </div>`)}),daily.innerHTML=day,weather){case"Thunderstorm":video.src="./img/thunderstorm.mp4";break;case"Drizzle":case"Rain":video.src="./img/rain.mp4";break;case"Snow":video.src="./img/snow.mp4";break;case"Mist":case"Fog":case"Smoke":case"Haze":video.src="./img/fog.mp4";break;case"Clear":video.src="./img/clear.mp4";break;default:video.src="./img/clouds.mp4"}weatherApp.style.opacity=1}cities.forEach(city=>{city.addEventListener("click",e=>{e.preventDefault();let citytxt=e.currentTarget.innerText;city.blur(),getcitycords(citytxt)})});let isDown=!1,startX,scrollLeft;slider.forEach(slider=>{slider.addEventListener("mousedown",e=>{isDown=!0,startX=e.pageX-slider.offsetLeft,scrollLeft=slider.scrollLeft}),slider.addEventListener("mouseleave",()=>isDown=!1),slider.addEventListener("mouseup",()=>isDown=!1),slider.addEventListener("mousemove",e=>{if(!isDown)return;e.preventDefault();const x=e.pageX-slider.offsetLeft,walk=2*(x-startX);slider.scrollLeft=scrollLeft-walk}),slider.addEventListener("wheel",evt=>{evt.preventDefault(),slider.scrollLeft+=evt.deltaY/2})});